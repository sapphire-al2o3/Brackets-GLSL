{
"funcs": [
	{"name": "radians", "def": "T radians(T degrees)"},
	{"name": "degrees", "def": "T degrees(T radians)"},
	{"name": "sin", "def": "T sin(T angle)"},
	{"name": "cos", "def": "T cos(T angle)"},
	{"name": "tan", "def": "T tan(T angle)"},
	{"name": "acos", "def": "T acos(T x)"},
	{"name": "atan", "def": "T atan(T y, T x)"},
	{"name": "pow", "def": "T pow(T x, T y)"},
	{"name": "exp", "def": "T exp(T x)"},
	{"name": "log", "def": "T log(T x)"},
	{"name": "exp2", "def": "T exp2(T x)"},
	{"name": "log2", "def": "T log2(T x)"},
	{"name": "sqrt", "def": "T sqrt(T x)"},
	{"name": "inversesqrt", "def": "T inversesqrt(T x)"},
	{"name": "abs", "def": "T abs(T x)"},
	{"name": "sign", "def": "T sign(T x)"},
	{"name": "floor", "def": "T floor(T x)"},
	{"name": "ceil", "def": "T ceil(T x)"},
	{"name": "fract", "def": "T fract(T x)"},
	{"name": "mod", "def": "T mod(T x, T y);T mod(T x, float y)"},
	{"name": "min", "def": "T min(T x, T y);T min(T x, float y)"},
	{"name": "max", "def": "T max(T x, T y);T max(T x, float y)"},
	{"name": "clamp", "def": "T clamp(T x, T minVal, T maxVal);T clamp(T x, float minVal, float maxVal)"},
	{"name": "mix", "def": "T mix(T x, T y, T a);T mix(T x, T y, float a)"},
	{"name": "step", "def": "T step(T edge, T x);T step(float edge, T x)"},
	{"name": "smoothstep", "def": "T smoothstep(T edge0, T edge1, T x);T smoothstep(float edge0, float edge1, T x)"},
	{"name": "length", "def": "float length(T x)"},
	{"name": "distance", "def": "float distance(T p0, T p1)"},
	{"name": "dot", "def": "float dot(T x, T y)"},
	{"name": "cross", "def": "vec3 cross(vec3 x, vec3 y)"},
	{"name": "normalize", "def": "T normalize(T x)"},
	{"name": "faceforward", "def": "T faceforward(T N, T I, T Nref)"},
	{"name": "reflect", "def": "T reflect(T I, T N)"},
	{"name": "refract", "def": "T refract(T I, T N, float eta)"},
	{"name": "matrixCompMult", "def": "mat matrixCompMult(mat x, mat y)"},
	{"name": "lessThan", "def": "bvec lessThan(vec x, vec y);bvec lessThan(ivec x, ivec y)"},
	{"name": "lessThanEqual", "def": "bvec lessThanEqual(vec x, vec y);bvec lessThanEqual(ivec x, ivec y)"},
	{"name": "greaterThan", "def": "bvec greaterThan(vec x, vec y);bvec greaterThan(ivec x, ivec y)"},
	{"name": "greaterThanEqual", "def": "bvec greaterThanEqual(vec x, vec y);bvec greaterThanEqual(ivec x, ivec y)"},
	{"name": "equal", "def": "bvec equal(vec x, vec y);bvec equal(ivec x, ivec y);bvec equal(bvec x, bvec y)"},
	{"name": "notEqual", "def": "bvec notEqual(vec x, vec y);bvec notEqual(ivec x, ivec y);bvec notEqual(bvec x, bvec y)"},
	{"name": "any", "def": "bool any(bvec x)"},
	{"name": "all", "def": "bool all(bvec x)"},
	{"name": "not", "def": "bvec not(bvec x)"},
	{"name": "texture2DLod", "filter": "vert", "def": "vec4 texture2DLod(sampler2D sampler, vec2 coord, float lod)"},
	{"name": "texture2DProjLod", "filter": "vert", "def": "vec4 texture2DProjLod(sampler2D sampler, vec3 coord, float lod);vec4 texture2DProjLod(sampler2D sampler, vec4 coord, float lod)"},
	{"name": "textureCubeLod", "filter": "vert", "def": "textureCubeLod(samplerCube sampler, vec3 coord, float lod)"},
	{"name": "texture2D", "def": "vec4 texture2D(sampler2D sampler, vec2 coord);vec4 texture2D(sampler2D sampler, vec2 coord, float bias)"},
	{"name": "texture2DProj", "def": "vec4 texture2DProj(sampler2D sampler, vec3 coord, float bias);vec4 texture2DProj(sampler2D sampler, vec4 coord);vec4 texture2DProj(sampler2D sampler, vec4 coord, float bias)"},
	{"name": "textureCube", "def": "vec4 textureCube(samplerCube sampler, vec3 coord);vec4 textureCube(samplerCube sampler, vec3 coord, float bias)"}
],
"types": [
	{"name": "void"},
	{"name": "bool"},
	{"name": "int"},
	{"name": "float"},
	{"name": "vec2"},
	{"name": "vec3"},
	{"name": "vec4"},
	{"name": "bvec2"},
	{"name": "bvec3"},
	{"name": "bvec4"},
	{"name": "ivec2"},
	{"name": "ivec3"},
	{"name": "ivec4"},
	{"name": "mat2"},
	{"name": "mat3"},
	{"name": "mat4"},
	{"name": "sample2D"},
	{"name": "sampleCube"},
	{"name": "struct"},
	
	{"name": "precision"},
	{"name": "const"},
	{"name": "attribute"},
	{"name": "uniform"},
	{"name": "varying"},
	{"name": "highp"},
	{"name": "lowp"},
	{"name": "in"},
	{"name": "out"},
	{"name": "inout"}
],
"variables": [
	{"name": "gl_Position", "filter": "vert", "def": "out highp vec4 gl_Position"},
	{"name": "gl_PointSize", "filter": "vert", "def": "out mediump float gl_PointSize"},
	{"name": "gl_FragCoord", "filter": "frag", "def": "in mediump vec4 gl_FragCoord"},
	{"name": "gl_FrontFacing", "filter": "frag", "def": "in bool gl_FrontFacing"},
	{"name": "gl_PointCoord", "filter": "frag", "def": "in mediump vec2 gl_PointCoord"},
	{"name": "gl_FragColor", "filter": "frag", "def": "out mediump vec4 gl_FragColor"},
	{"name": "gl_FragData", "filter": "frag", "def": "out mediump vec4 gl_FragData[gl_MaxDrawBuffers]"}
],
"constants": [
	{"name": "gl_MaxVertexAttribs"},
	{"name": "gl_MaxVertexUniformVectors"},
	{"name": "gl_MaxVaryingVectors"},
	{"name": "gl_MaxVertexTextureImageUnits"},
	{"name": "gl_MaxCombinedTextureImageUnits"},
	{"name": "gl_MaxTextureImageUnits"},
	{"name": "gl_MaxFragmentUniformVectors"},
	{"name": "gl_MaxDrawBuffers"},
	{"name": "gl_DepthRange"}
],
"pres": [
	{"name": "#define"},
	{"name": "#undef"},
	{"name": "#if"},
	{"name": "#ifdef"},
	{"name": "#ifndef"},
	{"name": "#else"},
	{"name": "#elif"},
	{"name": "#endif"},
	{"name": "#error"},
	{"name": "#pragma"},
	{"name": "#extension"},
	{"name": "#version"},
	{"name": "#line"}
],
"macro": [
	{"name": "__LINE__"},
	{"name": "__VERSION__"},
	{"name": "GL_ES"},
	{"name": "GL_FRAGMENT_QRECISION_HIGH"}
]
}